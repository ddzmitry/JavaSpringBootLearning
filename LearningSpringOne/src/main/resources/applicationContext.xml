<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!--Add context props-->
    <context:property-placeholder location="classpath:sport.properties"/>

    <!-- Define your beans  for dependency injection here here -->
    <bean id="myFortuneService" class="com.ddzmitry.CoachFortunes.CoachFortuneRandom">
    </bean>
    <bean id="personalCoachNamer" class="com.ddzmitry.NameServicesCoaches.PersonalCoachNamer">
    </bean>

    <bean id="myCoach" class="com.ddzmitry.Coaches.BaseballCoach">
        <!--Add myFortuneService as a reference Dependency Injection when constructing the coach-->
        <!--myFortuneService is used in constructor of coach -->
        <constructor-arg ref="myFortuneService"/>
        <constructor-arg ref="personalCoachNamer"/>
    </bean>

    <!--Scope Prototype will create new pnstance of class every time when its called-->
    <!--Scope Singelton will use the same class-instance  every time when its called-->
    <bean id="CrickeCoach" class="com.ddzmitry.Coaches.CricketCoach" scope="prototype">
        <!-- set up setter injection-->
        <property name="personalCoachNamer" ref="personalCoachNamer"/>
        <property name="fortuneService" ref="myFortuneService"/>
        <!--Set up literal Values from properties-->
        <property name="coachEmail" value="${foo.email}"/>
        <property name="team" value="${foo.team}"/>
    </bean>

    <bean id="myLoggerConfig" class="com.ddzmitry.LoggerConfigs.MyLoggerConfig" init-method="initLogger">
        <property name="rootLoggerLevel" value="FINE"/>
        <property name="printedLoggerLevel" value="FINE"/>
    </bean>
</beans>





